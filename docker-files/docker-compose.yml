x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}

version: "3"

services:
#Hadoop & Yarn
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      # - hadoop_namenode:/hadoop/dfs/name
      - "./volume/hadoop/namenode:/hadoop/dfs/name"
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      # - hadoop_datanode:/hadoop/dfs/data
      - "./volume/hadoop/datanode:/hadoop/dfs/data"
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    ports:
      - 8088:8088
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - "./volume/hadoop/historyserver:/hadoop/yarn/timeline"
    env_file:
      - ./hadoop.env
  
  
# Hive
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    ports:
      - "5432:5432"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    depends_on:
      - hive-metastore-postgresql
  
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    env_file:
      - ./hadoop.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
      - "10002:10002"

#Hue
  huedb:
    image: postgres:12.1-alpine
    container_name: huedb
    volumes:
        - "./volume/hue/pg_data:/var/lib/postgresl/data/"
    ports:
      - "5432"
    env_file:
      - ./hadoop.env
    environment:
        SERVICE_PRECONDITION: "namenode:9870 hive-metastore-postgresql:5432 hive-metastore:9083" #datanode:9875 


  hue:
    image: gethue/hue:4.6.0
    container_name: hue
    environment:
      SERVICE_PRECONDITION: "namenode:9870 hive-metastore-postgresql:5432 hive-metastore:9083 huedb:980" #datanode:9875 
    ports:
    - "8989:8888"
    volumes:
      - ./hue-overrides.ini:/usr/share/hue/desktop/conf/z-hue.ini
    # depends_on:
    links:
      - huedb

# Spark & Jupyter
  jupyterlab:
    image: andreper/jupyterlab:3.0.0-spark-3.0.0
    container_name: jupyterlab
    ports:
      - 8888:8888
      - 4040:4040
    # volumes:
    #   - shared-workspace:/opt/workspace

  spark-master:
    image: andreper/spark-master:3.0.0
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    # volumes:
    #   - shared-workspace:/opt/workspace

  spark-worker-1:
    image: andreper/spark-worker:3.0.0
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8081:8081
    # volumes:
    #   - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-2:
    image: andreper/spark-worker:3.0.0
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
    ports:
      - 8082:8082
    # volumes:
    #   - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

#Superset
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - "./volume/superset/redis:/data"

  db:
    env_file: docker/.env-non-dev
    image: postgres:14
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - "./volume/superset/db_home:/var/lib/postgresql/data"

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8089:8088
    depends_on:
      - db
      - redis
    volumes: 
      - ./docker:/app/docker
      - "./volume/superset/superset_home:/app/superset_home"

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on:
      - db
      - redis
    user: "root"
    volumes:
      - ./docker:/app/docker
      - "./volume/superset/superset_home:/app/superset_home"
    healthcheck:
      disable: true

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on:
      - db
      - redis
    user: "root"
    volumes:
      - ./docker:/app/docker
      - "./volume/superset/superset_home:/app/superset_home"

    healthcheck:
      test: ["CMD-SHELL", "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME"]

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: "no"
    depends_on:
      - db
      - redis
    user: "root"
    volumes:
      - ./docker:/app/docker
      - "./volume/superset/superset_home:/app/superset_home"
    healthcheck:
      disable: true


